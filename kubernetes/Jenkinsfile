pipeline {
    agent any
    
    environment {
        HELM_RELEASE_NAME = 'demo-app'
        NAMESPACE = 'demo'
        KUBECONFIG = '/var/jenkins_home/.kube/config'
        POSTGRES_HOST = 'postgres-postgresql.demo.svc.cluster.local'
        POSTGRES_PORT = '5432'
        POSTGRES_DB = 'containers'
        POSTGRES_USER = 'postgres'
        POSTGRES_PASSWORD = credentials('postgres-password')
        REDIS_HOST = 'redis-master.demo.svc.cluster.local'
        REDIS_PORT = '6379'
        REDIS_PASSWORD = credentials('redis-password')
    }
    
    stages {
        stage('Setup Tools') {
            steps {
                sh '''
                    echo "Installing required tools..."
                    
                    # Helm kurulumu
                    curl -fsSL https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
                    
                    # Kubectl kurulumu
                    KUBECTL_VERSION=$(curl -L -s https://dl.k8s.io/release/stable.txt)
                    curl -LO "https://dl.k8s.io/release/${KUBECTL_VERSION}/bin/linux/amd64/kubectl"
                    chmod +x kubectl
                    mv kubectl /usr/local/bin/kubectl || mv kubectl /bin/kubectl
                '''
            }
        }
        
        stage('Check Cluster') {
            steps {
                sh '''
                    echo "Checking cluster status..."
                    kubectl cluster-info
                    kubectl get nodes
                    
                    echo "Checking namespace..."
                    kubectl get namespace ${NAMESPACE} || kubectl create namespace ${NAMESPACE}
                '''
            }
        }
        
        stage('Check Database') {
            steps {
                sh '''
                    echo "Checking PostgreSQL & Redis status..."
                    kubectl get pods -n ${NAMESPACE} | grep -E "postgres|redis"
                '''
            }
        }
    }
}
